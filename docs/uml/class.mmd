classDiagram
    %% Core Classes
    class Database {
        +str name
        +dict~str,Table~ tables
        +create_table(name, schema) Table
        +drop_table(name) void
        +get_table(name) Table
        +insert_row(table_name, values) void
        +edit_row(table_name, index, values) void
        +save(path) void
        +to_json() dict
        +from_json(data) Database
        +load(path) Database
    }
    
    class Table {
        +str name
        +List~Column~ columns
        +List~Row~ rows
        +add_row(values) Row
        +update_row(index, values) Row
        +delete_row(index) void
        +get_rows() List~dict~
        +schema_signature() Tuple
        +from_schema(name, schema) Table
        +to_json() dict
        +from_json(data) Table
    }
    
    class Column {
        +str name
        +str type_name
        +to_json() dict
        +from_json(data) Column
    }
    
    class Row {
        +dict values
        +to_json() dict
        +from_json(data) Row
    }
    
    class TypeValidator {
        +normalize(value, type_name) Any
        +validate_row(schema, values) dict
        +validate_integer(value) int
        +validate_real(value) float
        +validate_char(value) str
        +validate_string(value) str
        +validate_date(value) str
        +validate_date_interval(value) dict
    }
    
    class Operations {
        +union_tables(t1: Table, t2: Table) Table
    }
    
    %% Web Layer Classes
    class FastAPIApp {
        +create_database(payload) dict
        +delete_database(payload) dict
        +rename_database(payload) dict
        +switch_database(payload) dict
        +import_database(payload) dict
        +export_database(payload) dict
        +create_table(payload) dict
        +delete_table(payload) dict
        +insert_row(payload) dict
        +update_row(payload) dict
        +delete_row(payload) dict
        +union_tables(payload) dict
        +list_databases() dict
        +list_tables() dict
    }
    
    %% Desktop Layer Classes
    class DesktopAPI {
        +Database db
        +create_table(name, schema_json) dict
        +insert_row(table, values_json) dict
        +union(left, right) dict
        +save(path) dict
        +load(path) dict
        +dump() dict
        +delete_table(name) dict
    }
    
    class PyWebViewApp {
        +start_server() void
        +main() void
        +build_desktop() void
        +find_free_port() int
    }
    
    class JsApi {
        +open_url(url) void
    }
    
    %% Google Drive Integration
    class GoogleDriveService {
        +authenticate() bool
        +upload_file(content, filename) str
        +download_file(file_id) str
        +list_files() List~dict~
    }
    
    %% Relationships
    Database --> Table : contains
    Table --> Column : has
    Table --> Row : contains
    Table --> TypeValidator : uses
    Operations --> Table : operates on
    
    FastAPIApp --> Database : manages
    FastAPIApp --> Operations : uses
    FastAPIApp --> GoogleDriveService : integrates
    
    DesktopAPI --> Database : manages
    DesktopAPI --> Operations : uses
    
    PyWebViewApp --> FastAPIApp : embeds
    PyWebViewApp --> JsApi : exposes
    
    %% Data Types Support
    class DataTypes {
        <<enumeration>>
        INTEGER
        REAL
        CHAR
        STRING
        DATE
        DATE_INTERVAL
    }
    
    TypeValidator --> DataTypes : validates