@startuml class_core
!theme plain
title TDMS Core - Class Diagram

package "src.core" {
  class Database {
    - name: str
    - tables: Dict[str, Table]
    --
    + __init__(name: str)
    + create_table(name: str, schema: List) : Table
    + drop_table(name: str) : void
    + get_table(name: str) : Table
    + insert_row(table_name: str, values: Dict) : void
    + edit_row(table_name: str, index: int, values: Dict) : void
    + to_json() : Dict[str, Any]
    + save(file_path: Path) : void
    + {static} from_json(data: Dict) : Database
    + {static} load(file_path: Path) : Database
  }

  class Table {
    - name: str
    - columns: List[Column]
    - rows: List[Row]
    --
    + __init__(name: str, columns: List[Column])
    + add_row(values: Dict[str, Any]) : Row
    + update_row(index: int, values: Dict) : Row
    + get_rows() : List[Dict[str, Any]]
    + schema_signature() : Tuple[Tuple[str, str]]
    + to_json() : Dict[str, Any]
    + {static} from_json(data: Dict) : Table
    + {static} from_schema(name: str, schema: List) : Table
    # {property} schema : List[Tuple[str, str]]
  }

  class Column {
    - name: str
    - type_name: str
    --
    + __init__(name: str, type_name: str)
    + to_json() : Dict[str, str]
    + {static} from_json(data: Dict) : Column
  }

  class Row {
    - values: Dict[str, Any]
    --
    + __init__(values: Dict[str, Any])
    + to_json() : Dict[str, Any]
    + {static} from_json(data: Dict) : Row
  }

  class TypeValidator {
    - {static} TYPE_VALIDATORS: Dict[str, Callable]
    --
    + {static} normalize_integer(value: Any) : int
    + {static} normalize_real(value: Any) : float
    + {static} normalize_char(value: Any) : str
    + {static} normalize_string(value: Any) : str
    + {static} normalize_date(value: Any) : str
    + {static} normalize_dateInvl(value: Any) : Dict
    + {static} normalize(value: Any, type_name: str) : Any
    + {static} validate_row(schema: List, values: Dict) : Dict
  }

  class Operations {
    --
    + {static} union_tables(table1: Table, table2: Table) : Table
    - {static} _row_key(row_values: Dict, schema: Tuple) : Tuple
  }

  ' Relationships
  Database "1" *-- "0..*" Table : contains
  Table "1" *-- "1..*" Column : has
  Table "1" *-- "0..*" Row : stores
  Table ..> TypeValidator : uses
  Operations ..> Table : operates on
  Database ..> Operations : uses

  note right of TypeValidator
    Supported types:
    - integer
    - real
    - char
    - string
    - date (YYYY-MM-DD)
    - dateInvl (interval)
  end note

  note bottom of Operations
    Union operation combines
    tables with compatible schemas
  end note
}

@enduml